/*
    MySTL stack
*/

#ifndef __MYSTL_STACK__
#define __MYSTL_STACK__

#include <stl/deque>

namespace stl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Стек
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T,class Sequence=deque<T> >
class stack 
{
  public:
    typedef typename Sequence::value_type      value_type;
    typedef typename Sequence::size_type       size_type;
    typedef          Sequence                  container_type;
    typedef typename Sequence::reference       reference;
    typedef typename Sequence::const_reference const_reference;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы
///////////////////////////////////////////////////////////////////////////////////////////////////    
             stack ();
    explicit stack (const Sequence&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Функции общего назначения
///////////////////////////////////////////////////////////////////////////////////////////////////    
    bool      empty () const;
    size_type size  () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Доступ
///////////////////////////////////////////////////////////////////////////////////////////////////        
    reference       top ();
    const_reference top () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Вставка / извлечение элементов из стека
///////////////////////////////////////////////////////////////////////////////////////////////////            
    void push (const value_type&);
    void pop  ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Сравнение
///////////////////////////////////////////////////////////////////////////////////////////////////                
    bool operator == (const stack&) const;
    bool operator != (const stack&) const;
    bool operator <  (const stack&) const;    
    bool operator >  (const stack&) const;  
    bool operator <= (const stack&) const;    
    bool operator >= (const stack&) const;
                         
  protected:
    Sequence c;
};

#include <stl/detail/stack.inl>

}

#endif
